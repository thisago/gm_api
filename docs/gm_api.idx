GmInfo	gm_api.html#GmInfo	gm_api: GmInfo	
arm	gm_api.html#arm	GmInfoArch.arm	
mips	gm_api.html#mips	GmInfoArch.mips	
mips64	gm_api.html#mips64	GmInfoArch.mips64	
x86-32	gm_api.html#x86-32	GmInfoArch.x86-32	
x86-64	gm_api.html#x86-64	GmInfoArch.x86-64	
GmInfoArch	gm_api.html#GmInfoArch	gm_api: GmInfoArch	
android	gm_api.html#android	GmInfoOs.android	
cros	gm_api.html#cros	GmInfoOs.cros	
linux	gm_api.html#linux	GmInfoOs.linux	
mac	gm_api.html#mac	GmInfoOs.mac	
openbsd	gm_api.html#openbsd	GmInfoOs.openbsd	
win	gm_api.html#win	GmInfoOs.win	
GmInfoOs	gm_api.html#GmInfoOs	gm_api: GmInfoOs	
GmInfoPlatform	gm_api.html#GmInfoPlatform	gm_api: GmInfoPlatform	
GM	gm_api.html#GM	gm_api: GM	
info	gm_api.html#info,GmType	gm_api: info(gm: GmType): GmInfo	
getValue	gm_api.html#getValue,GmType,cstring,cstring	gm_api: getValue(gm: GmType; key, defaultValue: cstring): Future[cstring]	
setValue	gm_api.html#setValue,GmType,cstring,cstring	gm_api: setValue(gm: GmType; key, value: cstring): Future[void]	
deleteValue	gm_api.html#deleteValue,GmType,cstring	gm_api: deleteValue(gm: GmType; key: cstring): Future[void]	
listValues	gm_api.html#listValues,GmType	gm_api: listValues(gm: GmType): Future[seq[cstring]]	
openInTab	gm_api.html#openInTab,GmType,cstring	gm_api: openInTab(gm: GmType; url: cstring; openInBackground = false)	
registerMenuCommand	gm_api.html#registerMenuCommand,GmType,cstring,Callable,cstring	gm_api: registerMenuCommand(gm: GmType; caption: cstring; commandFunc: Callable;\n                    accessKey: cstring)	
setClipboard	gm_api.html#setClipboard,GmType,cstring	gm_api: setClipboard(gm: GmType; text: cstring)	
notification	gm_api.html#notification,GmType,cstring,Callable,Callable	gm_api: notification(gm: GmType; text: cstring; title, image = &quot;&quot;.cstring;\n             onclick, ondone: Callable = notification_placeholderCallback)	
xmlHttpRequest	gm_api.html#xmlHttpRequest,GmType,cstring,cstring,openArray[],int,GmHttpResponse,GmHttpResponse,GmHttpResponse,GmHttpResponse,GmHttpResponse,GmHttpResponse	gm_api: xmlHttpRequest(gm: GmType; url, method: cstring; binary = false;\n               context = newJsObject(); data = &quot;&quot;.cstring;\n               headers: openArray[(string, string)] = [];\n               overrideMimeType, user, password = &quot;&quot;.cstring;\n               synchronous = false; timeout = 0; upload = newJsObject();\n    onabort, onerror, onload, onprogress, onreadystatechange, ontimeout: GmHttpResponse = xmlHttpRequest_placeholderCallback)	
unsafeWindow	gm_api.html#unsafeWindow	gm_api: unsafeWindow	
